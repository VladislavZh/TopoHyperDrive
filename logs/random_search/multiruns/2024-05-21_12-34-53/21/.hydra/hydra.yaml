hydra:
  run:
    dir: ${paths.log_dir}/${task_name}/runs/${now:%Y-%m-%d}_${now:%H-%M-%S}
  sweep:
    dir: ${paths.log_dir}/${task_name}/multiruns/${now:%Y-%m-%d}_${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    sampler:
      _target_: optuna.samplers.RandomSampler
      seed: 1234
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    direction: maximize
    storage: null
    study_name: ${task_name}
    n_trials: 30
    n_jobs: 1
    search_space: null
    params:
      model.net.num_hidden: range(128,4096)
      model.net.block_1_nb_filter: range(4,256)
      model.net.block_1_nb_layers: range(1,4)
      model.net.block_2_nb_filter: range(4,256)
      model.net.block_2_nb_layers: range(1,4)
      model.net.block_3_nb_filter: range(4,256)
      model.net.block_3_nb_layers: range(1,4)
      model.net.block_4_nb_filter: range(4,256)
      model.net.block_4_nb_layers: range(1,4)
      model.net.block_5_nb_filter: range(4,256)
      model.net.block_5_nb_layers: range(1,4)
    custom_search_space: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(purple)sHYDRA%(reset)s] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
      colorlog:
        (): colorlog.ColoredFormatter
        format: '[%(cyan)s%(asctime)s%(reset)s][%(blue)s%(name)s%(reset)s][%(log_color)s%(levelname)s%(reset)s]
          - %(message)s'
        log_colors:
          DEBUG: purple
          INFO: green
          WARNING: yellow
          ERROR: red
          CRITICAL: red
    handlers:
      console:
        class: logging.StreamHandler
        formatter: colorlog
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${task_name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - model.net.num_hidden=2711
    - model.net.block_1_nb_filter=195
    - model.net.block_1_nb_layers=4
    - model.net.block_2_nb_filter=99
    - model.net.block_2_nb_layers=2
    - model.net.block_3_nb_filter=98
    - model.net.block_3_nb_layers=4
    - model.net.block_4_nb_filter=231
    - model.net.block_4_nb_layers=2
    - model.net.block_5_nb_filter=4
    - model.net.block_5_nb_layers=1
    - trainer=gpu
    - hparams_search=random_search_optuna
  job:
    name: train
    chdir: null
    override_dirname: hparams_search=random_search_optuna,model.net.block_1_nb_filter=195,model.net.block_1_nb_layers=4,model.net.block_2_nb_filter=99,model.net.block_2_nb_layers=2,model.net.block_3_nb_filter=98,model.net.block_3_nb_layers=4,model.net.block_4_nb_filter=231,model.net.block_4_nb_layers=2,model.net.block_5_nb_filter=4,model.net.block_5_nb_layers=1,model.net.num_hidden=2711,trainer=gpu
    id: '21'
    num: 21
    config_name: train.yaml
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /notebook/notebook/TopoHyperDrive
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /notebook/notebook/TopoHyperDrive/configs
      schema: file
      provider: main
    - path: hydra_plugins.hydra_colorlog.conf
      schema: pkg
      provider: hydra-colorlog
    - path: ''
      schema: structured
      provider: schema
    output_dir: /notebook/notebook/TopoHyperDrive/logs/random_search/multiruns/2024-05-21_12-34-53/21
    choices:
      debug: null
      local: default
      hparams_search: random_search_optuna
      experiment: null
      hydra: default
      extras: default
      paths: default
      trainer: gpu
      logger: csv
      callbacks: default
      model: vgg_like
      data: cifar100
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: colorlog
      hydra/hydra_logging: colorlog
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: optuna
      hydra/sweeper/sampler: random
      hydra/launcher: basic
      hydra/output: default
  verbose: false
