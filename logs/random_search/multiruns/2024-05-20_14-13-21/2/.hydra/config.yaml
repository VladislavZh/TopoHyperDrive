task_name: random_search
tags:
- dev
train: true
test: true
ckpt_path: null
seed: null
data:
  _target_: src.data.cifar_100_datamodule.CIFAR100Datamodule
  data_dir: ${paths.data_dir}
  batch_size: 1024
  num_workers: 4
  pin_memory: true
model:
  _target_: src.models.image_classification_module.ImageClassificationModule
  optimizer:
    _target_: torch.optim.Adam
    _partial_: true
    lr: 0.001
    weight_decay: 1.0e-06
  scheduler:
    _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
    _partial_: true
    mode: min
    factor: 0.1
    patience: 5
  scheduler_params:
    monitor: val/loss
    interval: epoch
    frequency: 1
  net:
    _target_: src.models.components.cnn.MetaSearchVGGLike
    in_channels: 3
    in_height: 32
    in_width: 32
    num_hidden: 427
    num_classes: 100
    block_1_nb_filter: 191
    block_1_nb_layers: 4
    block_2_nb_filter: 335
    block_2_nb_layers: 2
    block_3_nb_filter: 405
    block_3_nb_layers: 2
    block_4_nb_filter: 293
    block_4_nb_layers: 4
    block_5_nb_filter: 226
    block_5_nb_layers: 4
  compile: false
callbacks:
  model_checkpoint:
    _target_: lightning.pytorch.callbacks.ModelCheckpoint
    dirpath: ${paths.output_dir}/checkpoints
    filename: epoch_{epoch:03d}
    monitor: val/accuracy
    verbose: false
    save_last: true
    save_top_k: 1
    mode: max
    auto_insert_metric_name: false
    save_weights_only: false
    every_n_train_steps: null
    train_time_interval: null
    every_n_epochs: null
    save_on_train_epoch_end: null
  early_stopping:
    _target_: lightning.pytorch.callbacks.EarlyStopping
    monitor: val/accuracy
    min_delta: 0.0
    patience: 15
    verbose: false
    mode: max
    strict: true
    check_finite: true
    stopping_threshold: null
    divergence_threshold: null
    check_on_train_epoch_end: null
  model_summary:
    _target_: lightning.pytorch.callbacks.RichModelSummary
    max_depth: -1
  rich_progress_bar:
    _target_: lightning.pytorch.callbacks.RichProgressBar
logger:
  csv:
    _target_: lightning.pytorch.loggers.csv_logs.CSVLogger
    save_dir: ${paths.output_dir}
    name: csv/
    prefix: ''
trainer:
  _target_: lightning.pytorch.trainer.Trainer
  default_root_dir: ${paths.output_dir}
  min_epochs: 1
  max_epochs: 100
  accelerator: gpu
  devices: 1
  check_val_every_n_epoch: 1
  log_every_n_steps: 10
  deterministic: false
paths:
  root_dir: ${oc.env:PROJECT_ROOT}
  data_dir: ${paths.root_dir}/data/
  log_dir: ${paths.root_dir}/logs/
  output_dir: ${hydra:runtime.output_dir}
  work_dir: ${hydra:runtime.cwd}
extras:
  ignore_warnings: false
  enforce_tags: true
  print_config: true
optimized_metric: val/acc_best
